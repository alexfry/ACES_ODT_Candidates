DEFINE_ACES_PARAM(IS_PARAMETRIC_ACES_TRANSFORM: 0)

__DEVICE__ float lin_to_ACEScct(float in) {
  if (in <= 0.0078125f) {
    return 10.5402377416545f * in + 0.0729055341958355f;
  } else {
    return (_log2f(in) + 9.72f) / 17.52f;
  }
}

__DEVICE__ float3 transform(int p_Width, int p_Height, int p_X, int p_Y, float p_R, float p_G, float p_B)
{
    float r = p_R;
    float g = p_G;
    float b = p_B;

    float r_cct = lin_to_ACEScct(r);
    float g_cct = lin_to_ACEScct(g);
    float b_cct = lin_to_ACEScct(b);

    const float3 res = APPLY_LUT(r_cct, g_cct, b_cct, DRTLUT);

    return res;
}


DEFINE_CUBE_LUT(DRTLUT)
{
REPLACE_WITH_CUBE_DATA}