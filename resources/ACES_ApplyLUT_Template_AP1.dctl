DEFINE_ACES_PARAM(IS_PARAMETRIC_ACES_TRANSFORM: 0,
                  OUTPUT_COLORSPACE_TAG: DCTL_ACES_COLORSPACE_BUFFER_TAG_PLACEHOLDER) 

__DEVICE__ float lin_to_ACEScct(float in) {
  if (in <= 0.0078125f) {
    return 10.5402377416545f * in + 0.0729055341958355f;
  } else {
    return (_log2f(in) + 9.72f) / 17.52f;
  }
}

__DEVICE__ float3 transform(int p_Width, int p_Height, int p_X, int p_Y, float p_R, float p_G, float p_B)
{

    // AP0 to AP1
    float r = (  1.4514393161f   * p_R) + (  -0.2365107469f  * p_G) + (   -0.2149285693f   * p_B);
    float g = ( -0.0765537734f   * p_R) + (   1.1762296998f  * p_G) + (   -0.0996759264f   * p_B);
    float b = (  0.0083161484f   * p_R) + (  -0.0060324498f  * p_G) + (    0.9977163014f   * p_B);


    float r_cct = lin_to_ACEScct(r);
    float g_cct = lin_to_ACEScct(g);
    float b_cct = lin_to_ACEScct(b);

    const float3 res = APPLY_LUT(r_cct, g_cct, b_cct, DRTLUT);

    return res;
}


DEFINE_CUBE_LUT(DRTLUT)
{
REPLACE_WITH_CUBE_DATA}